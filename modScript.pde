mod mod = new mod();

// Переменные:

// Мир:
// scale - жесткость мира
// seed - сид (зерно) мира
// seed2 - сид2 (зерно) мира (изменения заменяются используя функцию updateSeed(s))
// seed3 - сид3 (зерно) мира (изменения заменяются используя функцию updateSeed(s))
// seed4 - сид4 (зерно) мира (изменения заменяются используя функцию updateSeed(s))
// seed5 - сид5 (зерно) мира (изменения заменяются используя функцию updateSeed(s))
// seed6 - сид6 (зерно) мира (изменения заменяются используя функцию updateSeed(s))
// zPos - z позиция шума (всех) (не используется в игре)
// size - размер каждого блока на карте (и игрока)
// cloudsX - координата x облаков
// cloudsY - координата y облаков (не используется в игре)

// Игрок:
// xPl - x координата игрока
// yPl - y координата игрока
// plspeed - скорость игрока
// setblockinvid - айди массива в массиве inv, и из него береться первое значение

// Карты шумов:
// map[x][y] - шум высоты, диапазон: 0 ~ 255, ниже или равно 100 - вода (или лед), выше или равно 100 - равнина (или другие биомы)
// map2[x][y] - на этой карте не хранятся шумы, это карта поставленных (и убранных) блоков, на ней спавняться структуры (деревья, кактусы)
// map3[x][y] - это шум рандомности структур
// map4[x][y] - а это шум температуры, по ней строятся биомы, ниже или равно 30 - снежный биом или лед, выше или равно 30 и ниже или равно 40 - равнины, выше или равно 40 - пустыня
// map5[x][y] - карта облаков, по ней строятся облака, на них форму действует atmoInt, zPos и frameCl (доп переменные. xClouds и yClouds, они меняют их координаты)
// есть еще шестой map, но он локальный (создавать его для постоянной основе тупо), который нужен для atmoInt, или точнее, его рельефу

public class mod {
  void setupScript() {
    
  }
  void drawScript() {
    
  }
  void drawUIScript() {
    
  }
  void rendernoiseThreadScript() {
    
  }
  void renderatmonoiseThreadScript() {
    
  }
  void rendermapThreadScript() {
    
  }
  void rendermap2ThreadScript() {
    
  }
  void rendercloudsThreadScript() {
    /*for(int x = 0; x < map5.length-1; x++) {
      for(int y = 0; y < map5[x].length-1; y++) {
        if(map5[x][y] > -20 && map5[x][y] < 20) {
          fill(0);
          setBlock(((x-((map5.length)/2))*size*2)+size*2,((y-((map5[x].length)/2))*size*2)+size*2,size*2,size*2);
        }
      }
    }*/
  }
}
